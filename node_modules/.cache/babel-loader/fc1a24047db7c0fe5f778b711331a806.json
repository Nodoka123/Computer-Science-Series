{"remainingRequest":"/Users/Eschirtz/Documents/02_Local_Personal/01_Code/02_Projects/01_Videos/Computer-Science-Series/node_modules/thread-loader/dist/cjs.js!/Users/Eschirtz/Documents/02_Local_Personal/01_Code/02_Projects/01_Videos/Computer-Science-Series/node_modules/babel-loader/lib/index.js!/Users/Eschirtz/Documents/02_Local_Personal/01_Code/02_Projects/01_Videos/Computer-Science-Series/node_modules/eslint-loader/index.js??ref--13-0!/Users/Eschirtz/Documents/02_Local_Personal/01_Code/02_Projects/01_Videos/Computer-Science-Series/src/views/ep01/js/main.js","dependencies":[{"path":"/Users/Eschirtz/Documents/02_Local_Personal/01_Code/02_Projects/01_Videos/Computer-Science-Series/src/views/ep01/js/main.js","mtime":1548279915444},{"path":"/Users/Eschirtz/Documents/02_Local_Personal/01_Code/02_Projects/01_Videos/Computer-Science-Series/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Eschirtz/Documents/02_Local_Personal/01_Code/02_Projects/01_Videos/Computer-Science-Series/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Eschirtz/Documents/02_Local_Personal/01_Code/02_Projects/01_Videos/Computer-Science-Series/node_modules/babel-loader/lib/index.js","mtime":1548279913642},{"path":"/Users/Eschirtz/Documents/02_Local_Personal/01_Code/02_Projects/01_Videos/Computer-Science-Series/node_modules/eslint-loader/index.js","mtime":1548279914305}],"contextDependencies":[],"result":["/**\n * WARNING! This code is a hack, the only interesting code lives\n * inside \"algorithms.js\", found in this directory\n */\nimport canvasTools from '@/custom-modules/canvas-tools';\nimport { drawHill, drawBall } from './DrawingTools';\nimport StateSpace from './StateSpace';\nimport Algorithm from './algorithms';\nvar currentFrame = null;\nvar scene = {\n  stateSpace: {},\n  currState: {}\n};\n/**\n * Creates a normalized \"hill\" or function with\n * given number of data points.\n * @param  {[type]} points  [description]\n * @param  {[type]} options [description]\n * @return {[type]}         [description]\n */\n\nfunction getHill(points, options) {\n  var pi = Math.PI;\n  var f1 = options.f1 || 2;\n  var f2 = options.f2 || 7;\n  var f3 = options.f3 || 20;\n  var f4 = options.f4 || 0.5;\n  var phi1 = Math.random();\n  var phi2 = Math.random();\n  var phi3 = Math.random();\n  var phi4 = Math.random(); // Generate heights on hill\n\n  var hill = [];\n  var maxHeight = 1;\n\n  for (var i = 0; i < points; i += 1) {\n    var t = i / points; // for use in cosine\n\n    /* eslint-disable no-mixed-operators */\n\n    var cos1 = 1.0 * Math.cos(2 * pi * f1 * t + 2 * pi * phi1);\n    var cos2 = 0.25 * Math.cos(2 * pi * f2 * t + 2 * pi * phi2);\n    var cos3 = 0.1 * Math.cos(2 * pi * f3 * t + 2 * pi * phi3);\n    var cos4 = 1.65 * Math.cos(2 * pi * f4 * t + 2 * pi * phi4);\n    /* eslint-enable no-mixed-operators */\n\n    var cosSum = cos1 + cos2 + cos3 + cos4 + 2;\n    var currHeight = Math.abs(cosSum); // prevent negative valleys\n\n    if (currHeight > maxHeight) maxHeight = currHeight;\n    hill.push(currHeight);\n  } // normalize hill\n\n\n  for (var _i = 0; _i < points; _i += 1) {\n    hill[_i] /= maxHeight;\n  }\n\n  return hill;\n}\n\nfunction render(canvas, options) {\n  // Clear Canvas\n  var context = canvas.getContext('2d');\n  context.fillStyle = options.backgroundColor || 'white';\n  context.fillRect(0, 0, canvas.width, canvas.height);\n  context.scale(1, -1); // set positive Y as up\n\n  context.translate(canvas.width / 2, -canvas.height / 2); // set (0,0) to center\n\n  var x = 0;\n  var y = -canvas.height / 2;\n  var width = canvas.width;\n  var height = canvas.height * (3 / 4); // Draw Scene\n\n  drawHill(canvas, scene.backgroundHill, {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    color: options.backgroundHillColor\n  });\n  drawHill(canvas, scene.stateSpace.scores, {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    color: options.hillColor\n  });\n  var radius = 25;\n  drawBall(canvas, scene.currState, scene.stateSpace, {\n    x: x,\n    y: y + radius,\n    width: width,\n    height: height,\n    radius: radius,\n    primaryColor: options.ballColor,\n    secondaryColor: options.ballColor\n  });\n} // Wrapper for canvas-tools\n\n\nfunction setCanvasSize(canvas) {\n  canvasTools.setCanvasSize(canvas);\n}\n\nfunction initialize(canvas, options) {\n  // Build scene\n  var numPoints = options.numPoints || 300; // Artwork\n\n  scene.backgroundHill = getHill(numPoints, {\n    f3: 2\n  }); // Algorithm dependants\n\n  scene.stateSpace = new StateSpace();\n  scene.stateSpace.scores = getHill(numPoints, options);\n  scene.currState = scene.stateSpace.randomState();\n  scene.canvas = canvas; // add global pointer to the canvas\n\n  scene.backgroundColor = options.backgroundColor;\n  scene.backgroundHillColor = options.backgroundHillColor;\n  scene.hillColor = options.hillColor;\n  scene.ballColor = options.ballColor;\n  setCanvasSize(canvas);\n  render(scene.canvas, {\n    backgroundHillColor: scene.backgroundHillColor,\n    hillColor: scene.hillColor,\n    backgroundColor: scene.backgroundColor,\n    ballColor: scene.ballColor\n  });\n}\n/**\n * Pulls from global scene to do work\n * Dependency on globals is a little sloppy,\n * but fine for this demo\n * @return {[type]} [description]\n */\n\n\nfunction frame() {\n  // Update Scene only at intervals set by keyframe\n  currentFrame = window.requestAnimationFrame(frame);\n\n  if (scene.time % scene.keyframe === 0) {\n    scene.currState = Algorithm.simulatedAnnealing(scene.currState, scene.stateSpace, scene.temp, scene.stepSize);\n    scene.temp *= scene.coolingRate; // apply cooling\n\n    setCanvasSize(scene.canvas);\n    render(scene.canvas, {\n      backgroundHillColor: scene.backgroundHillColor,\n      hillColor: scene.hillColor,\n      backgroundColor: scene.backgroundColor,\n      ballColor: scene.ballColor\n    });\n  }\n\n  scene.time += 1;\n}\n\nfunction run(opts) {\n  if (currentFrame) {\n    window.cancelAnimationFrame(currentFrame);\n  }\n\n  var options = opts || {};\n  scene.temp = options.initialTemp;\n  scene.coolingRate = options.coolingRate;\n  scene.algorithm = options.algorithm;\n  scene.keyframe = options.keyframe; // frames between changes\n\n  scene.stepSize = options.stepSize;\n  scene.time = 0;\n  frame();\n}\n\nfunction terminate() {\n  if (currentFrame) {\n    window.cancelAnimationFrame(currentFrame);\n  }\n}\n\nexport default {\n  initialize: initialize,\n  setCanvasSize: setCanvasSize,\n  render: render,\n  run: run,\n  terminate: terminate\n};",{"version":3,"sources":["/Users/Eschirtz/Documents/02_Local_Personal/01_Code/02_Projects/01_Videos/Computer-Science-Series/src/views/ep01/js/main.js"],"names":["canvasTools","drawHill","drawBall","StateSpace","Algorithm","currentFrame","scene","stateSpace","currState","getHill","points","options","pi","Math","PI","f1","f2","f3","f4","phi1","random","phi2","phi3","phi4","hill","maxHeight","i","t","cos1","cos","cos2","cos3","cos4","cosSum","currHeight","abs","push","render","canvas","context","getContext","fillStyle","backgroundColor","fillRect","width","height","scale","translate","x","y","backgroundHill","color","backgroundHillColor","scores","hillColor","radius","primaryColor","ballColor","secondaryColor","setCanvasSize","initialize","numPoints","randomState","frame","window","requestAnimationFrame","time","keyframe","simulatedAnnealing","temp","stepSize","coolingRate","run","opts","cancelAnimationFrame","initialTemp","algorithm","terminate"],"mappings":"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","sourcesContent":["/**\n * WARNING! This code is a hack, the only interesting code lives\n * inside \"algorithms.js\", found in this directory\n */\n\nimport canvasTools from '@/custom-modules/canvas-tools';\nimport { drawHill, drawBall } from './DrawingTools';\nimport StateSpace from './StateSpace';\nimport Algorithm from './algorithms';\n\nlet currentFrame = null;\n\nconst scene = {\n  stateSpace: {},\n  currState: {},\n};\n\n/**\n * Creates a normalized \"hill\" or function with\n * given number of data points.\n * @param  {[type]} points  [description]\n * @param  {[type]} options [description]\n * @return {[type]}         [description]\n */\nfunction getHill(points, options) {\n  const pi = Math.PI;\n  const f1 = options.f1 || 2;\n  const f2 = options.f2 || 7;\n  const f3 = options.f3 || 20;\n  const f4 = options.f4 || 0.5;\n  const phi1 = Math.random();\n  const phi2 = Math.random();\n  const phi3 = Math.random();\n  const phi4 = Math.random();\n  // Generate heights on hill\n  const hill = [];\n  let maxHeight = 1;\n  for (let i = 0; i < points; i += 1) {\n    const t = i / points; // for use in cosine\n    /* eslint-disable no-mixed-operators */\n    const cos1 = (1.0) * Math.cos(2 * pi * (f1) * t + 2 * pi * phi1);\n    const cos2 = (0.25) * Math.cos(2 * pi * (f2) * t + 2 * pi * phi2);\n    const cos3 = (0.1) * Math.cos(2 * pi * (f3) * t + 2 * pi * phi3);\n    const cos4 = (1.65) * Math.cos(2 * pi * (f4) * t + 2 * pi * phi4);\n    /* eslint-enable no-mixed-operators */\n    const cosSum = cos1 + cos2 + cos3 + cos4 + 2;\n    const currHeight = Math.abs(cosSum); // prevent negative valleys\n    if (currHeight > maxHeight) maxHeight = currHeight;\n    hill.push(currHeight);\n  }\n  // normalize hill\n  for (let i = 0; i < points; i += 1) {\n    hill[i] /= maxHeight;\n  }\n  return hill;\n}\n\n\nfunction render(canvas, options) {\n  // Clear Canvas\n  const context = canvas.getContext('2d');\n  context.fillStyle = options.backgroundColor || 'white';\n  context.fillRect(0, 0, canvas.width, canvas.height);\n  context.scale(1, -1); // set positive Y as up\n  context.translate(canvas.width / 2, -canvas.height / 2); // set (0,0) to center\n  const x = 0;\n  const y = -canvas.height / 2;\n  const width = canvas.width;\n  const height = canvas.height * (3 / 4);\n  // Draw Scene\n  drawHill(canvas, scene.backgroundHill, {\n    x,\n    y,\n    width,\n    height,\n    color: options.backgroundHillColor,\n  });\n  drawHill(canvas, scene.stateSpace.scores, {\n    x,\n    y,\n    width,\n    height,\n    color: options.hillColor,\n  });\n  const radius = 25;\n  drawBall(canvas, scene.currState, scene.stateSpace, {\n    x,\n    y: y + radius,\n    width,\n    height,\n    radius,\n    primaryColor: options.ballColor,\n    secondaryColor: options.ballColor,\n  });\n}\n\n// Wrapper for canvas-tools\nfunction setCanvasSize(canvas) {\n  canvasTools.setCanvasSize(canvas);\n}\n\nfunction initialize(canvas, options) {\n  // Build scene\n  const numPoints = options.numPoints || 300;\n  // Artwork\n  scene.backgroundHill = getHill(\n    numPoints,\n    { f3: 2 });\n  // Algorithm dependants\n  scene.stateSpace = new StateSpace();\n  scene.stateSpace.scores = getHill(\n    numPoints,\n    options);\n  scene.currState = scene.stateSpace.randomState();\n  scene.canvas = canvas; // add global pointer to the canvas\n  scene.backgroundColor = options.backgroundColor;\n  scene.backgroundHillColor = options.backgroundHillColor;\n  scene.hillColor = options.hillColor;\n  scene.ballColor = options.ballColor;\n  setCanvasSize(canvas);\n  render(scene.canvas, {\n    backgroundHillColor: scene.backgroundHillColor,\n    hillColor: scene.hillColor,\n    backgroundColor: scene.backgroundColor,\n    ballColor: scene.ballColor,\n  });\n}\n/**\n * Pulls from global scene to do work\n * Dependency on globals is a little sloppy,\n * but fine for this demo\n * @return {[type]} [description]\n */\nfunction frame() {\n  // Update Scene only at intervals set by keyframe\n  currentFrame = window.requestAnimationFrame(frame);\n  if (scene.time % scene.keyframe === 0) {\n    scene.currState = Algorithm.simulatedAnnealing(\n      scene.currState,\n      scene.stateSpace,\n      scene.temp,\n      scene.stepSize);\n    scene.temp *= scene.coolingRate; // apply cooling\n    setCanvasSize(scene.canvas);\n    render(scene.canvas, {\n      backgroundHillColor: scene.backgroundHillColor,\n      hillColor: scene.hillColor,\n      backgroundColor: scene.backgroundColor,\n      ballColor: scene.ballColor,\n    });\n  }\n  scene.time += 1;\n}\n\nfunction run(opts) {\n  if (currentFrame) {\n    window.cancelAnimationFrame(currentFrame);\n  }\n  const options = opts || {};\n  scene.temp = options.initialTemp;\n  scene.coolingRate = options.coolingRate;\n  scene.algorithm = options.algorithm;\n  scene.keyframe = options.keyframe; // frames between changes\n  scene.stepSize = options.stepSize;\n  scene.time = 0;\n  frame();\n}\n\nfunction terminate() {\n  if (currentFrame) {\n    window.cancelAnimationFrame(currentFrame);\n  }\n}\n\nexport default { initialize, setCanvasSize, render, run, terminate };\n"]}]}